FUNCTION_BLOCK delta_internal 

VAR_INPUT
    selfEnergy : REAL;
    	RANGE := (0 .. 100);
    selfConsumption : REAL;
    	RANGE := (0 .. 10);
END_VAR

VAR_OUTPUT
    delta_i : REAL;
    	RANGE := (0 .. 1);
END_VAR

FUZZIFY selfEnergy
    //TERM surplus := sigm 40 70;
    //TERM sufficient := gbell 20 40 50;
    //TERM poor := sigm -40 30;
    TERM surplus := (50, 0) (100, 1);
    TERM sufficient := trian 25 50 75;
    TERM poor := (0, 1) (50, 0);
END_FUZZIFY

FUZZIFY selfConsumption
    TERM compliant := (0, 1) (8, 0);
    TERM excessive := (2, 0) (10, 1);
END_FUZZIFY

DEFUZZIFY delta_i
    //TERM embrace := sigm 6 5.5;
    //TERM reject := sigm -6 4.5;
    TERM embrace := (0.4, 0) (0.8, 1) (1, 1);
    TERM reject := (0, 1) (0.2, 1) (0.6, 0);
    METHOD: COG;
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;	// Use 'min' for 'and'
	ACT : MIN;	// Use 'min' activation method
	ACCU : MAX;	// Use 'max' accumulation method

	RULE 1: IF selfEnergy IS surplus AND selfConsumption IS compliant THEN delta_i IS embrace;
	RULE 2: IF selfEnergy IS surplus AND selfConsumption IS excessive THEN delta_i IS reject;
	RULE 3: IF selfEnergy IS sufficient THEN delta_i IS embrace;
	RULE 4: IF selfEnergy IS poor THEN delta_i IS reject;

END_RULEBLOCK

END_FUNCTION_BLOCK