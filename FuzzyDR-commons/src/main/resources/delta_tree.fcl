FUNCTION_BLOCK agent 

VAR_INPUT
    selfEnergy : REAL;
    neighborEnergy : REAL;
END_VAR

VAR_OUTPUT
    agreement : REAL;
END_VAR

FUZZIFY selfEnergy
    TERM low := (0, 1) (3, 1) (5, 0);
    TERM ok := (3, 0) (5, 1) (7, 0);
    TERM great := (5, 0) (7, 1) (10, 1);
END_FUZZIFY

FUZZIFY neighborEnergy
    TERM low := (0, 0) (3, 1) (5, 0);
    TERM ok := (3, 0) (5, 1) (7, 0);
    TERM great := (7, 0) (9, 1) (10, 1);
END_FUZZIFY

DEFUZZIFY agreement
    //TERM agree := (0.5, 0) (0.7, 1) (1, 0);
    //TERM disagree := (0, 0) (0.3, 1) (0.5, 1);
    //METHOD: COG; // Center of Gravity
    TERM agree := (0.5, 0) (1, 1);
    TERM disagree := (0, 1) (0.5, 1);
    METHOD: COG;
END_DEFUZZIFY

RULEBLOCK No1
	RULE 1: IF selfEnergy IS low THEN agreement IS disagree;
	RULE 2: IF selfEnergy IS great THEN agreement IS agree;
	RULE 3: IF selfEnergy IS ok THEN agreement IS agree;
	
	//AND : MIN;	// Use 'min' for 'and'
	//ACT : MIN;	// Use 'min' activation method
	//ACCU : MAX;	// Use 'max' accumulation method
	
    // Add rules as needed. For example:
    ////RULE 1: IF selfEnergy IS great THEN agreement IS agree;
    ////RULE 2: IF selfEnergy IS ok THEN agreement IS disagree;
    ////RULE 3: IF selfEnergy IS low THEN agreement IS disagree;
    
    //RULE 1: IF ( (selfEnergy IS great) OR (selfEnergy IS ok) ) AND ( (neighborEnergy IS great) OR (neighborEnergy IS ok) ) THEN agreement IS agree;
    //RULE 2: IF selfEnergy IS low THEN agreement IS disagree;
    ////RULE 3: IF selfEnergy IS low AND neighorEnergy IS low THEN agreement IS disagree;
    ////RULE 4: IF ( (selfEnergy IS great) OR (selfEnergy IS ok) ) AND neighborEnergy IS low THEN agreement is agree;
END_RULEBLOCK

END_FUNCTION_BLOCK